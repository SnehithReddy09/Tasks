/* 1st Query  Find all the topics and tasks which are thought in the month of October */

db.topics_and_tasks.find({
  "$where": "this.Start_date.getMonth() === 09"
},
{
  "_id": 0,
  "Topic_name": 1,
  "Start_date": 1,
  "Task.Task_name": 1
})

/*RESULT*/

[
  {
    "Start_date": ISODate("2020-10-11T00:00:00Z"),
    "Task": {
      "Task_name": "Java Programs"
    },
    "Topic_name": "Java"
  },
  {
    "Start_date": ISODate("2020-10-20T00:00:00Z"),
    "Task": {
      "Task_name": "Assignment 2"
    },
    "Topic_name": "Angular"
  },
  {
    "Start_date": ISODate("2020-10-01T00:00:00Z"),
    "Task": {
      "Task_name": "Create DB"
    },
    "Topic_name": "SQL"
  }
]



/* Query 2 Find all the company drives which appeared between 15 oct-2020 and 31-oct-2020 */
db.company_drives.find({
  "Details.date": {
    $gt: new Date("2020-10-15"),
    $lt: new Date("2020-10-31")
  }
}
)

/*RESULT*/

[
  {
    "Company_name": "Value Labs",
    "Details": {
      "Placement_type": [
        "On-Campus"
      ],
      "Students_attended": [
        1,
        2,
        3,
        4,
        5
      ],
      "date": ISODate("2020-10-16T00:00:00Z")
    },
    "_id": ObjectId("5a934e000102030405000002")
  },
  {
    "Company_name": "DXC",
    "Details": {
      "Placement_type": [
        "On-Campus"
      ],
      "Students_attended": [
        1,
        3,
        4,
        5,
        6
      ],
      "date": ISODate("2020-10-16T00:00:00Z")
    },
    "_id": ObjectId("5a934e000102030405000003")
  },
  {
    "Company_name": "Wipro",
    "Details": {
      "Placement_type": [
        "Off-Campus"
      ],
      "Students_attended": [
        3,
        4,
        5
      ],
      "date": ISODate("2020-10-25T00:00:00Z")
    },
    "_id": ObjectId("5a934e000102030405000004")
  },
  {
    "Company_name": "Amazon",
    "Details": {
      "Placement_type": [
        "Off-Campus"
      ],
      "Students_attended": [
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "date": ISODate("2020-10-20T00:00:00Z")
    },
    "_id": ObjectId("5a934e000102030405000006")
  }
]


/* QUERY 3 Find all the company drives and students who are appeared for the placement. */

db.company_drives.find({},
{
  "_id": 0,
  "Company_name": 1,
  "Details.Students_attended": 1
})

/*RESULT*/

[
  {
    "Company_name": "Chubb",
    "Details": {
      "Students_attended": [1,2,3,5]
    }
  },
  {
    "Company_name": "TCS",
    "Details": {
      "Students_attended": [1,3,5,6]
    }
  },
  {
    "Company_name": "Value Labs",
    "Details": {
      "Students_attended": [1,2,3,4,5]
    }
  },
  {
    "Company_name": "DXC",
    "Details": {
      "Students_attended": [1,3,4,5,6 ]
    }
  },
  {
    "Company_name": "Wipro",
    "Details": {
      "Students_attended": [3,4,5]
    }
  },
  {
    "Company_name": "Cognizant",
    "Details": {
      "Students_attended": [1,2,4,5]
    }
  },
  {
    "Company_name": "Amazon",
    "Details": {
      "Students_attended": [1,2,3,4,5,6]
    }
  }
]


/* QUERY 4 Find the number of problems solved by the user in codekata*/

db.codekata.aggregate({
  $project: {
    "Student_id": "$Student_id",
    "_id": 0,
    total_solved: {
      $sum: "$Details.Solved"
    }
  }
})

/*RESULT*/

[
  {
    "Student_id": 1,
    "total_solved": 65
  },
  {
    "Student_id": 2,
    "total_solved": 70
  },
  {
    "Student_id": 3,
    "total_solved": 54
  },
  {
    "Student_id": 4,
    "total_solved": 40
  }
]


/*QUERY 5 Find all the mentors with who has the mentee's count more than 15 */

db.mentors.find({
  $where: "this.Mentees.length >= 15"
},
{
  "_id": 0,
  "Mentor_id": 1,
  "Name": 1,
  
})

/*RESULT*/

[
  {
    "Mentor_id": 1,
    "Name": "Shanker"
  },
  {
    "Mentor_id": 1,
    "Name": "Niranjan"
  }
]


/*QUERY 6 Find the number of users who are absent and task is submitted  between 15 oct-2020 and 31-oct-2020*/
db.users_task.find({ $and:[ {"details.submitted_date":{$gt:new Date("2020-10-15"),$lt:new Date("2020-10-31")}}, {"details.status":"present"} ] });

/*RESULT*/

[
  {
    "_id": ObjectId("5a934e000102030405000000"),
    "details": [
      {
        "status": "absent",
        "student_id": 4,
        "submitted_date": ISODate("2020-10-20T00:00:00Z")
      }
    ],
    "task_given_data": ISODate("2020-10-17T00:00:00Z"),
    "task_id": 1,
    "task_name": "task1"
  },
  {
    "_id": ObjectId("5a934e000102030405000001"),
    "details": [
      {
        "status": "absent",
        "student_id": 1,
        "submitted_date": ISODate("2020-10-21T00:00:00Z")
      }
    ],
    "task_given_data": ISODate("2020-10-20T00:00:00Z"),
    "task_id": 2,
    "task_name": "task2"
  },
  {
    "_id": ObjectId("5a934e000102030405000002"),
    "details": [
      {
        "status": "absent",
        "student_id": 3,
        "submitted_date": ISODate("2020-10-26T00:00:00Z")
      },
      {
        "status": "absent",
        "student_id": 5,
        "submitted_date": ISODate("2020-10-29T00:00:00Z")
      }
    ],
    "task_given_data": ISODate("2020-10-25T00:00:00Z"),
    "task_id": 3,
    "task_name": "task3"
  }
]
